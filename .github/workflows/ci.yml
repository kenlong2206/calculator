name: CI

on:
  push:
    branches:
      - master
      - develop
      - feature-*
      - release-*
  pull_request:
    branches:
      - master
      - develop
      - feature-*
      - release-*

jobs:
  test:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout
      with:
        fetch-depth: 0  # Disable shallow clone

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set up PYTHONPATH
      run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)/src" >> $GITHUB_ENV

    - name: Create directories
      run: |
        mkdir -p tests/test_reports
        mkdir -p logs
        touch logs/calculator_log.txt
        pwd
        ls -l 

    - name: Run tests with coverage
      run: |
        source venv/bin/activate
        python -m pytest
        ls -l tests/test_reports

    - name: List files for debugging
      run: |
        echo "Listing files in tests/test_reports:"
        ls -R tests/test_reports
        echo "Displaying the contents of coverage.xml:"
        cat tests/test_reports/coverage.xml

    - name: Display Sonar properties
      run: |
        echo "Displaying Sonar properties:"
        cat sonar-project.properties

    - name: Display environment variables
      run: |
        echo "Displaying environment variables:"
        env

    - name: Check for src directory
      run: |
        if [ -d "src" ]; then
          echo "src directory exists."
          ls -R src
        else
          echo "src directory does not exist."
        fi

    - name: Upload coverage to SonarCloud
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.host.url=https://sonarcloud.io 
          -Dsonar.python.version=3
          -Dsonar.branch.name=${{ github.ref_name }}
          -Dsonar.sources=src/
          -Dsonar.python.xunit.reportPath=tests/test_reports/xunit-result.xml
          -Dsonar.python.coverage.reportPaths=tests/test_reports/coverage.xml
          -Dsonar.exclusions=**/tests/**,**/__init__.py

    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/calculator-app:latest .

#    - name: Tag Docker image with the github commit reference, the github branch and the github pipeline run number
#      env:
#        GITHUB_REPOSITORY: ${{ github.repository }}
#        GITHUB_REF_NAME: ${{ github.ref }}
#        GITHUB_RUN_NUMBER: ${{ github.run_number }}
#        BRANCH_NAME: ${{ github.ref_name }}
#      run: |
#        docker tag ${{ secrets.DOCKERHUB_USERNAME }}/calculator-app:latest ${{ secrets.DOCKERHUB_USERNAME }}/calculator-app:sha-${{ github.sha }}
#        docker tag ${{ secrets.DOCKERHUB_USERNAME }}/calculator-app:latest ${{ secrets.DOCKERHUB_USERNAME }}/calculator-app:branch-${{ github.ref_name }}
#        docker tag ${{ secrets.DOCKERHUB_USERNAME }}/calculator-app:latest ${{ secrets.DOCKERHUB_USERNAME }}/calculator-app:run-${{ github.run_number }}

    - name: Log into Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Push Docker image with each of its tags to Docker Hub
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/calculator-app:latest
#        docker push ${{ secrets.DOCKERHUB_USERNAME }}/calculator-app:sha-${{ github.sha }}
#        docker push ${{ secrets.DOCKERHUB_USERNAME }}/calculator-app:branch-${{ github.ref_name }}
#        docker push ${{ secrets.DOCKERHUB_USERNAME }}/calculator-app:run-${{ github.run_number }}

    - name: Upload test files
      uses: actions/upload-artifact@v2
      with:
        name: test_reports
        path: .tests/test_reports

    - name: Upload log file
      uses: actions/upload-artifact@v2
      with:
        name: calculator_log.txt
        path: ./logs

